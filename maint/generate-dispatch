#!/usr/bin/perl

use strict;
use warnings;
use autodie;

no warnings 'uninitialized';

use JSON::PP;
use File::Basename 'fileparse';

my (%imports, %commands);

while (<STDIN>) {
   my $c = decode_json($_);

   $imports{$c->{import}} = 1;

   my ($basename) = fileparse($c->{path}, ".go");

   %commands = (
      %commands,
      $basename => "$c->{package}.$c->{func}"
   );
}

open my $fh, '>', 'dispatch.go';

print $fh <<'GOLANG';
// Code generated by maint/generate-dispatch. DO NOT EDIT.

package main

import (
	"io"

GOLANG

print $fh qq(\t"$_"\n) for sort keys %imports;

print $fh <<'GOLANG';
)

func init() {
	Dispatch = map[string]func([]string, io.Reader) error{
GOLANG

print $fh qq(\t\t"$_": $commands{$_},\n) for sort keys %commands;

print $fh <<'GOLANG';

		"help":    Help,
		"version": Version,
		"explode": Explode,
	}
}
GOLANG

close $fh;

system 'go', 'fmt';
