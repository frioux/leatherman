#!/usr/bin/perl

# find-tools prints a json line per tool, each with:
#  * func
#  * import
#  * package
#  * path
#
# set LM_TOOL to a regex to filter tools by path.

use strict;
use warnings;
use autodie;

no warnings 'uninitialized';

use JSON::PP;

my $re = qr/$ENV{LM_TOOL}/;

for my $pkg (`go list -json ./internal/tool/... | jq -c .`) {
   my $c = decode_json($pkg);
   my $dir = $c->{Dir};
   
   for my $file (@{$c->{GoFiles}}) {
      next if "$dir/$file" !~ $re;

      my $g = decode_json(`goblin -file $dir/$file`);
      my $path = $g->{path}; 
      my $pkg = $g->{"package-name"}{value};
      
      for my $decl (@{$g->{declarations}}) {
         next if $decl->{type} ne "function";
         next if $decl->{name}{value} !~ m/^[A-Z]/;

         warn "# $path matched LM_TOOL\n" if $ENV{LM_TOOL};
         print encode_json({
            func => $decl->{name}{value},
            import => $c->{ImportPath},
            package => $pkg,
            path => $path,
         }) . "\n";
      }
   }
}
