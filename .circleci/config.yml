version: 2
jobs:
  build:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/golang:1.14.0-buster
    steps:
      - checkout
      - run:
          name: Tests
          environment:
             TZ: America/Los_Angeles
             GO111MODULE: "on"
          command: go test -coverprofile=cover.cover -race ./...
      - run:
          name: Cleanup
          command: rm -rf *
      - run:
          name: Create Artifacts Target
          command: 'mkdir ./artifacts/'
      - run:
          name: Linux Build
          environment:
             GO111MODULE: "on"
          command: >
             go get -v -mod=readonly github.com/frioux/leatherman@${CIRCLE_SHA1};
             xz --stdout "$(go env GOPATH)/bin/leatherman" > ./artifacts/leatherman.xz
      - run:
          name: Windows Build
          environment:
             GOOS: windows
             GO111MODULE: "on"
          command: >
             go get -v -mod=readonly github.com/frioux/leatherman@${CIRCLE_SHA1};
             zip ./artifacts/leatherman.zip "$(go env GOPATH)/bin/windows_amd64/leatherman.exe"
      - run:
          name: OSX Build
          environment:
             GOOS: darwin
             GO111MODULE: "on"
          command: >
             go get -v -mod=readonly -x github.com/frioux/leatherman@${CIRCLE_SHA1};
             xz --stdout "$(go env GOPATH)/bin/leatherman" > ./artifacts/leatherman-osx.xz
      - run:
          name: Install GHR
          working_directory: ~/
          environment:
          command: >
             go get -u github.com/tcnksm/ghr
      - run:
          name: Release
          command: >
             ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} untagged-${CIRCLE_SHA1} ./artifacts/
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
