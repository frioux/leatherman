version: 2
jobs:
  build:
    working_directory: ~/mern-starter
    docker:
      - image: circleci/golang:1.12-stretch
    steps:
      - checkout
      - run:
          name: Create Artifacts Target
          command: 'mkdir ./artifacts/'
      - run:
          name: Install Deps
          command: 'go get ./...'
      - run:
          name: Windows Build
          environment:
             GO111MODULE: "on"
             GOOS: windows
          command: >
            go mod verify;
            go build -ldflags "-s -X 'github.com/frioux/leatherman/internal/version.Version=$(git describe --abbrev=7 --dirty --always)' -X 'github.com/frioux/leatherman/internal/version.When=$(git log -1 --pretty=%cI $(git describe --abbrev=7 --dirty --always) 2>/dev/null)'";
            zip leatherman.zip leatherman.exe;
            mv leatherman.zip ./artifacts/leatherman-windows.zip
      - run:
          name: OSX Build
          environment:
             GO111MODULE: "on"
             GOOS: darwin
          command: >
            go mod verify;
            go build -ldflags "-s -X 'github.com/frioux/leatherman/internal/version.Version=$(git describe --abbrev=7 --dirty --always)' -X 'github.com/frioux/leatherman/internal/version.When=$(git log -1 --pretty=%cI $(git describe --abbrev=7 --dirty --always) 2>/dev/null)'";
            xz leatherman;
            mv leatherman.xz ./artifacts/leatherman-osx.xz
      - run:
          name: Linux Build
          command: >
            make;
            mv leatherman.xz artifacts/leatherman.xz
      - run:
          name: Install GHR
          working_directory: ~/
          environment:
             GO111MODULE: "off"
          command: >
             go get -u github.com/tcnksm/ghr
      - run:
          name: Release
          command: >
             ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} untagged-${CIRCLE_SHA1} ./artifacts/
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
