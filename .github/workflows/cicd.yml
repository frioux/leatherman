on: [push]

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - run: go test ./...
        env:
          TZ: America/Los_Angeles

  build:
    strategy:
        matrix:
          cur:
            - {GOOS: windows, GOARCH: amd64, outfile: leatherman.win.xz}
            - {GOOS: linux, GOARCH: amd64, outfile: leatherman.xz}
            - {GOOS: linux, GOARCH: arm, outfile: leatherman.arm.xz}
            - {GOOS: darwin, GOARCH: amd64, outfile: leatherman.mac.xz}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: go build -ldflags "-X 'github.com/frioux/leatherman/internal/version.Version=$GITHUB_SHA' -X 'github.com/frioux/leatherman/internal/version.When=$(git log -1 --pretty=%cI $GITHUB_SHA 2>/dev/null)'"
        env:
          GOOS: ${{ matrix.cur.GOOS }}
          GOARCH: ${{ matrix.cur.GOARCH }}
      - run: xz --stdout leatherman > ${{ matrix.cur.outfile}}
      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.cur.outfile }}
          path: ${{ matrix.cur.outfile }}

  release:
    runs-on: ubuntu-20.04
    steps:
      - uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: untagged-${{ github.sha }}

      - id: create_release
        uses: actions/create-release@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: untagged-${{ github.sha }}
          release_name: Release ${{ github.sha }}

  upload:
    strategy:
        matrix:
          file: ['leatherman.xz', 'leatherman.win.xz', 'leatherman.arm.xz', 'leatherman.mac.xz']

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ matrix.file }}
          path: ${{ matrix.file }}

      - uses: actions/upload-release-asset@v1
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.file }}
          asset_name: ${{ matrix.file }}
          asset_content_type: application/x-xz
